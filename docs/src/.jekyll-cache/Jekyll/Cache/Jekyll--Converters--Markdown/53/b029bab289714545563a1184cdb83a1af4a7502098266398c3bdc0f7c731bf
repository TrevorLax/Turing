I"¥<h1 id="getting-started">Getting Started</h1>

<h2 id="installation">Installation</h2>

<p>To use Turing, you need to install Julia first and then install Turing.</p>

<h3 id="install-julia">Install Julia</h3>

<p>You will need to install Julia 1.0 or greater, which you can get from <a href="http://julialang.org/downloads/">the official Julia website</a>.</p>

<h3 id="install-turingjl">Install Turing.jl</h3>

<p>Turing is an officially registered Julia package, so the following will install a stable version of Turing while inside Juliaâ€™s package manager (press <code class="language-plaintext highlighter-rouge">]</code> from the REPL):</p>

<div class="language-julia highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add</span> <span class="n">Turing</span>
</code></pre></div></div>

<p>If you want to use the latest version of Turing with some experimental features, you can try the following instead:</p>

<div class="language-julia highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add</span> <span class="n">Turing</span><span class="c">#master</span>
<span class="n">test</span> <span class="n">Turing</span>
</code></pre></div></div>

<p>If all tests pass, youâ€™re ready to start using Turing.</p>

<h3 id="example">Example</h3>

<p>Hereâ€™s a simple example showing the package in action:</p>

<div class="language-julia highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="n">Turing</span>
<span class="k">using</span> <span class="n">StatsPlots</span>

<span class="c"># Define a simple Normal model with unknown mean and variance.</span>
<span class="nd">@model</span> <span class="n">gdemo</span><span class="x">(</span><span class="n">x</span><span class="x">,</span> <span class="n">y</span><span class="x">)</span> <span class="o">=</span> <span class="k">begin</span>
  <span class="n">s</span> <span class="o">~</span> <span class="n">InverseGamma</span><span class="x">(</span><span class="mi">2</span><span class="x">,</span> <span class="mi">3</span><span class="x">)</span>
  <span class="n">m</span> <span class="o">~</span> <span class="n">Normal</span><span class="x">(</span><span class="mi">0</span><span class="x">,</span> <span class="n">sqrt</span><span class="x">(</span><span class="n">s</span><span class="x">))</span>
  <span class="n">x</span> <span class="o">~</span> <span class="n">Normal</span><span class="x">(</span><span class="n">m</span><span class="x">,</span> <span class="n">sqrt</span><span class="x">(</span><span class="n">s</span><span class="x">))</span>
  <span class="n">y</span> <span class="o">~</span> <span class="n">Normal</span><span class="x">(</span><span class="n">m</span><span class="x">,</span> <span class="n">sqrt</span><span class="x">(</span><span class="n">s</span><span class="x">))</span>
<span class="k">end</span>

<span class="c">#  Run sampler, collect results</span>
<span class="n">chn</span> <span class="o">=</span> <span class="n">sample</span><span class="x">(</span><span class="n">gdemo</span><span class="x">(</span><span class="mf">1.5</span><span class="x">,</span> <span class="mi">2</span><span class="x">),</span> <span class="n">HMC</span><span class="x">(</span><span class="mf">0.1</span><span class="x">,</span> <span class="mi">5</span><span class="x">),</span> <span class="mi">1000</span><span class="x">)</span>

<span class="c"># Summarise results (currently requires the master branch from MCMCChains)</span>
<span class="n">describe</span><span class="x">(</span><span class="n">chn</span><span class="x">)</span>

<span class="c"># Plot and save results</span>
<span class="n">p</span> <span class="o">=</span> <span class="n">plot</span><span class="x">(</span><span class="n">chn</span><span class="x">)</span>
<span class="n">savefig</span><span class="x">(</span><span class="s">"gdemo-plot.png"</span><span class="x">)</span>
</code></pre></div></div>

:ET