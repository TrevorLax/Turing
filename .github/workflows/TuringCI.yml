name: Turing-CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    strategy:
      matrix:
        version:
          - '1.3'
          - '1.6'
        os:
          - ubuntu-latest
        arch:
          - x64
        num_threads:
          - 1
          - 2
        include:
          - version: '1.6'
            os: ubuntu-latest
            arch: x86
            num_threads: 2
          - version: '1.6'
            os: windows-latest
            arch: x64
            num_threads: 2
          - version: '1.6'
            os: macOS-latest
            arch: x64
            num_threads: 2
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - name: Clone Libtask
        uses: actions/checkout@v2
        with:
          repository: TuringLang/Libtask.jl
          ref: tape-instruction
          path: new_libtask
      - name: Load local Libtask
        shell: julia --color=yes --project {0}
        run: |
          using Pkg
          try
            # force it to use this PR's version of the package
            Pkg.develop(PackageSpec(path="new_libtask"))  # resolver may fail with main deps
            Pkg.update()
            # Pkg.test()  # resolver may fail with test time deps
          catch err
            err isa Pkg.Resolve.ResolverError || rethrow()
            # If we can't resolve that means this is incompatible by SemVer and this is fine
            # It means we marked this as a breaking change, so we don't need to worry about
            # Mistakenly introducing a breaking change, as we have intentionally made one
            @info "Not compatible with this release. No problem." exception=err
            exit(0)  # Exit immediately, as a success
          end
      - uses: julia-actions/julia-runtest@latest
        with:
          coverage: ${{ matrix.version == '1.6' && matrix.os == 'ubuntu-latest' && matrix.num_threads == 1 }}
        env:
          JULIA_NUM_THREADS: ${{ matrix.num_threads }}
      - uses: julia-actions/julia-processcoverage@v1
        if: matrix.version == '1.6' && matrix.os == 'ubuntu-latest' && matrix.num_threads == 1
      - uses: codecov/codecov-action@v1
        if: matrix.version == '1.6' && matrix.os == 'ubuntu-latest' && matrix.num_threads == 1
        with:
          file: lcov.info
      - uses: coverallsapp/github-action@master
        if: matrix.version == '1.6' && matrix.os == 'ubuntu-latest' && matrix.num_threads == 1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
