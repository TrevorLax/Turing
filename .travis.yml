group: deprecated-2017Q3
addons:
    apt:
        sources:
           - ubuntu-toolchain-r-test
        packages:
           - gcc-5
           - g++-5
language: julia
julia:
  - 0.6
os:
  - linux
  - osx
env:
  - GROUP=Test
  - GROUP=Bench
  - GROUP=LDA
  - GROUP=MOC
  - GROUP=SV
  - GROUP=Opt
matrix:
    fast_finish: true
    exclude:
       - os: osx
         env: GROUP=Bench
       - os: osx
         env: GROUP=LDA
       - os: osx
         env: GROUP=MOC
       - os: osx
         env: GROUP=SV
       - os: osx
         env: GROUP=Opt

    allow_failures:
       - env: GROUP=Test
         os: osx
       - env: GROUP=Bench
       - env: GROUP=LDA
       - env: GROUP=MOC
       - env: GROUP=SV
       - env: GROUP=Opt

notifications:
    email: false
script:
  - if [ "$(uname)" != "Darwin" ]; then ln -s `which gcc-5` gcc && export PATH=`pwd`:$PATH && echo $PATH; sudo apt-get install hdf5-tools; fi
  - gcc -v
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  - julia --check-bounds=yes -e 'Pkg.update();
             Pkg.clone(pwd(), "Turing");
             Pkg.build("Turing");
             if ENV["GROUP"] == "Test"
                Pkg.test("Turing"; coverage=true)
             elseif ENV["GROUP"] == "Bench"
                include(Pkg.dir("Turing")*"/benchmarks/install_deps.jl");
                include(Pkg.dir("Turing")*"/benchmarks/benchmark.jl")
             elseif ENV["GROUP"] == "LDA"
                include(Pkg.dir("Turing")*"/benchmarks/install_deps.jl");
                include(Pkg.dir("Turing")*"/benchmarks/lda.run.jl")
             elseif ENV["GROUP"] == "MOC"
                include(Pkg.dir("Turing")*"/benchmarks/install_deps.jl");
                include(Pkg.dir("Turing")*"/benchmarks/MoC.run.jl")
             elseif ENV["GROUP"] == "SV"
                include(Pkg.dir("Turing")*"/benchmarks/install_deps.jl");
                include(Pkg.dir("Turing")*"/benchmarks/sv.run.jl")
             elseif ENV["GROUP"] == "Opt"
                include(Pkg.dir("Turing")*"/benchmarks/install_deps.jl");
                include(Pkg.dir("Turing")*"/benchmarks/optimization.jl")
             else
                println("Unknown test command.")
             end'
after_success:
  - julia -e 'if ENV["GROUP"] != "Bench"
                cd(Pkg.dir("Turing")); Pkg.add("Coverage");
                using Coverage; Coveralls.submit(process_folder())
                end'
notifications:
    email: false
